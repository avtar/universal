/*!
GPII Access Requester

Copyright 2017 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/GPII/universal/blob/master/LICENSE.txt
*/

"use strict";

var fluid = require("infusion"),
    gpii = fluid.registerNamespace("gpii");

/*
 * Access Requester provides getAccessToken(gpiiToken) API that returns a promise object whose resolved value is the access token.
 * When this API is called, the access requester does:
 * 1. Retrieves client credentials;
 * 2. Communicate with GPII Cloud end point via [resource owner GPII token grant](https://wiki.gpii.net/w/GPII_OAuth_2_Guide#Resource_Owner_GPII_Token_Grant);
 * 3. Retrieves the access token from the response of GPII Cloud end point;
 * 4. Returns the promise object with the access token.
 *
 * Access Requester accepts these options:
 * @gpiiToken {String} The GPII token.
 * @accessTokenURI {String} The GPII cloud http end point to request access tokens granted by OAuth2 resource owner GPII token grant.
 * such as https://flowmanager.gpii.net/access_token
 *
 */
fluid.defaults("gpii.accessRequester", {
    gradeNames: ["fluid.component"],
    gpiiToken: null,   // Must be provided by integrators
    accessTokenURI: "https://flowmanager.gpii.net/access_token",   // Must be provided by integrators
    components: {
        clientCredentialRetriever: {
            type: "gpii.accessRequester.clientCredentialRetriever"
        }
    },
    invokers: {
        getAccessToken: {
            funcName: "gpii.accessRequester.getAccessToken",
            args: ["{arguments}.0"]
            // gpiiToken
        }
    }
});
